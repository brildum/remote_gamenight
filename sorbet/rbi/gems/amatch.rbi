# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/amatch/all/amatch.rbi
#
# amatch-0.4.0
module Amatch
end
class Amatch::Levenshtein
  def initialize(arg0); end
  def match(arg0); end
  def pattern; end
  def pattern=(arg0); end
  def search(arg0); end
  def similar(arg0); end
end
module Amatch::StringMethods
  def damerau_levenshtein_similar(arg0); end
  def hamming_similar(arg0); end
  def jaro_similar(arg0); end
  def jarowinkler_similar(arg0); end
  def levenshtein_similar(arg0); end
  def longest_subsequence_similar(arg0); end
  def longest_substring_similar(arg0); end
  def pair_distance_similar(*arg0); end
end
class Amatch::DamerauLevenshtein
  def initialize(arg0); end
  def match(arg0); end
  def pattern; end
  def pattern=(arg0); end
  def search(arg0); end
  def similar(arg0); end
end
class Amatch::Sellers
  def deletion; end
  def deletion=(arg0); end
  def initialize(arg0); end
  def insertion; end
  def insertion=(arg0); end
  def match(arg0); end
  def pattern; end
  def pattern=(arg0); end
  def reset_weights; end
  def search(arg0); end
  def similar(arg0); end
  def substitution; end
  def substitution=(arg0); end
end
class Amatch::Hamming
  def initialize(arg0); end
  def match(arg0); end
  def pattern; end
  def pattern=(arg0); end
  def similar(arg0); end
end
class Amatch::PairDistance
  def initialize(arg0); end
  def match(*arg0); end
  def pattern; end
  def pattern=(arg0); end
  def similar(*arg0); end
end
class Amatch::LongestSubsequence
  def initialize(arg0); end
  def match(arg0); end
  def pattern; end
  def pattern=(arg0); end
  def similar(arg0); end
end
class Amatch::LongestSubstring
  def initialize(arg0); end
  def match(arg0); end
  def pattern; end
  def pattern=(arg0); end
  def similar(arg0); end
end
class Amatch::Jaro
  def ignore_case; end
  def ignore_case=(arg0); end
  def initialize(arg0); end
  def match(arg0); end
  def pattern; end
  def pattern=(arg0); end
  def similar(arg0); end
end
class Amatch::JaroWinkler
  def ignore_case; end
  def ignore_case=(arg0); end
  def initialize(arg0); end
  def match(arg0); end
  def pattern; end
  def pattern=(arg0); end
  def scaling_factor; end
  def scaling_factor=(arg0); end
  def similar(arg0); end
end
class String
  include Amatch::StringMethods
end
